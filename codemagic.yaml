workflows:
  ios_maui_release:
    name: "iOS MAUI Release (.NET 8, Auto Codesign)"
    instance_type: mac_mini_m1
    max_build_duration: 60

    environment:
      # İstersen pinleyebilirsin: xcode: 16.0
      vars:
        PROJECT_DIR: "LessArcApppp"            # csproj klasörü
        CSPROJ_PATH: "LessArcApppp.csproj"     # csproj dosya adı
        IOS_BUNDLE_ID: "com.nisakara.lessarc"  # csproj ile aynı olmalı
      groups:
        # Bu grupta ŞUNLAR tanımlı olmalı:
        # - APP_STORE_CONNECT_PRIVATE_KEY  (p8 içeriği)
        # - APP_STORE_CONNECT_KEY_IDENTIFIER (ör: 7Q2TKG3479)
        # - APP_STORE_CONNECT_ISSUER_ID      (ör: 575bd9c7-....-....)
        # - CM_CERTIFICATE                   (p12 base64 içeriği)
        # - CM_CERTIFICATE_PASSWORD          (p12 parolası)
        - app_store_connect

    cache:
      cache_paths:
        - ~/.nuget/packages
        - ~/.dotnet

    scripts:
      - name: .NET 8 ve MAUI yükle
        script: |
          set -euo pipefail
          curl -sSL https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh
          bash dotnet-install.sh --channel 8.0
          export PATH="$HOME/.dotnet:$PATH"
          dotnet --info
          dotnet workload install maui

      - name: Codemagic CLI + keychain
        script: |
          set -euo pipefail
          pip3 install --user codemagic-cli-tools
          export PATH="$HOME/Library/Python/3.11/bin:$PATH"
          keychain initialize

      - name: Sertifikayı (p12) keychain’e import et
        script: |
          set -euo pipefail
          # p12 base64 içeriğini dosyaya yaz
          echo "$CM_CERTIFICATE" | base64 --decode > dist.p12
          # p12’yi keychain’e ekle
          keychain add-certificates \
            --certificate dist.p12 \
            --certificate-password "$CM_CERTIFICATE_PASSWORD"

      - name: App Store Connect’ten provisioning profilleri çek
        script: |
          set -euo pipefail
          # APP_STORE_* değişkenlerini CLI otomatik alır
          app-store-connect fetch-signing-files "$IOS_BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create
          # Anahtarlıktaki sertifikaları da ekleyelim
          keychain add-certificates
          ls -la "$HOME/Library/MobileDevice/Provisioning Profiles" || true

      - name: NuGet restore
        script: |
          set -euo pipefail
          cd "$PROJECT_DIR"
          dotnet restore "$CSPROJ_PATH"

      - name: İmzalı IPA üret (Release, ios-arm64)
        script: |
          set -euo pipefail
          cd "$PROJECT_DIR"
          dotnet publish "$CSPROJ_PATH" -f net8.0-ios -c Release \
            -p:RuntimeIdentifier=ios-arm64 \
            -p:ArchiveOnBuild=true \
            -p:Codesign=true \
            -p:BuildIpa=true

      - name: IPA/xcarchive topla
        script: |
          set -euo pipefail
          mkdir -p "$CM_ARTIFACTS_DIR"
          # Olası tüm çıkış yollarını tara
          find "$PROJECT_DIR/bin/Release/net8.0-ios/ios-arm64" -name "*.ipa" -print -exec cp {} "$CM_ARTIFACTS_DIR" \; || true
          find "$PROJECT_DIR/bin/Release/net8.0-ios/ios-arm64/publish" -name "*.ipa" -print -exec cp {} "$CM_ARTIFACTS_DIR" \; || true
          find "$PROJECT_DIR/bin/Release/net8.0-ios/ios-arm64" -name "*.xcarchive" -print -exec cp -R {} "$CM_ARTIFACTS_DIR" \; || true

    artifacts:
      - $CM_ARTIFACTS_DIR/*.ipa
      - $CM_ARTIFACTS_DIR/*.xcarchive

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
          source: true
